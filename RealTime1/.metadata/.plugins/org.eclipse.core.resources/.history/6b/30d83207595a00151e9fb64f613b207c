package com.javacodegeeks.examples.realtimeapp.part1.services;

import java.util.LinkedList;
import java.util.List;
import java.util.Random;

import org.springframework.stereotype.Component;

import com.javacodegeeks.examples.realtimeapp.part1.domain.Task;
import com.javacodegeeks.examples.realtimeapp.part1.domain.TaskStatus;

@Component
public class TaskExecutor {
	private List<Task> pool = new LinkedList<>();
	
	public void makeNewTask() {
		Task newTask = new Task();
		long randTaskDuration = new Random().nextInt(30);
		
		newTask.setDuration(randTaskDuration);
	}
	
	public void startAllTasks() {
		while (poolContainsRunningTasks()) {
			this.pool.stream()
					.filter(task -> task.getStatus().equals(TaskStatus.RUNNING))
					.forEach(task -> task.decrementDuration());
		}
	}

	private boolean poolContainsRunningTasks() {
		return this.pool.stream().anyMatch(task -> task.getStatus().equals(TaskStatus.RUNNING));
	}
}
